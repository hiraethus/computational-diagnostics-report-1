\documentclass[11pt,a4paper]{article}
\usepackage[hidelinks]{hyperref}
\usepackage{Sweave}
\usepackage{listings}
\lstset{
   breaklines=true,
   basicstyle=\ttfamily}

\begin{document}
\SweaveOpts{concordance=TRUE}
\title{Computational Diagnostics:  Assignment 1}
\author{Mr Michael J. Jones \\
  \em MSc Bioinformatics and \\
  \em Computational Genomics}
\date{\today}
\maketitle

<<echo=FALSE>>=
options(width=60)
@

\section{Needleman and Wunsch Alignment}
The Needleman and Wunsch alignment algorithm was implemented as an R package and tested quite thoroughly by use of the \verb@testthat@ unit testing framework and uploaded to \href{https://github.com}{github.com}.\footnote{The source-code can be freely downloaded at \url{https://github.com/hiraethus/Needleman-Wunsch}}

As the package uses Hadley Wickham's \verb@devtools@, the package can be easily installed. Note that this method will only work with distributions of R using Linux and Mac OS X.

<<>>=
#  only install hiraethus.needleman.wunsch if not already installed
if (!("hiraethus.needleman.wunsch" %in% installed.packages())) {
  devtools::install_github("hiraethus/Needleman-Wunsch")
}
# now load the library
library("hiraethus.needleman.wunsch")
@

\subsection{Demonstrating Needleman-Wunsch implementation}
The signature for the needleman-wunsch function is \begin{verbatim}function (seq1, seq2, gap = 0, match = 1, mismatch = 0).\end{verbatim}

We will compare the result of doing a sequence alignment on two example sequences using different parameters for the scoring 
function.

<<>>=
# given
sequence1 <- "ACCCGGTCGTCAATTA"
sequence2 <- "ACCACCGGTTGGTCCAATAA"

match <- 1
mismatch <- -1
gap <- -1

first.alignment <- needle(sequence1, sequence2, gap, match, mismatch)
print(first.alignment)
@

If we change the parameters, say by making the mismatch penalty zero, we can still see that in this case, the alignments are the same but the maxscore is higher.
<<>>=
# given
match <- 1
mismatch <- 0
gap <- -1

second.alignment <- needle(sequence1, sequence2, gap, match, mismatch)
print(second.alignment)
@


The traceback and score matrices are stored in the result object calculated by the \verb@needle@ function.

<<>>=
first.alignment.traceback <- first.alignment$traceback.matrix
second.alignment.traceback <- second.alignment$traceback.matrix
traceback.mismatches <- length(which(
  first.alignment.traceback != second.alignment.traceback))
print(traceback.mismatches)
@

Even though the two alignments returned were equal, the actual traceback matrices used to calculate the sequence alignments 
yield a number of different results as well. We can see from the above code that $\Sexpr{traceback.mismatches}$ mismatches 
are found between the two traceback matrices.

\end{document}